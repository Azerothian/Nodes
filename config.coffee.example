express = require "express"
passport = require "passport"
connect = require "connect"

cookieParser = express.cookieParser('secret  key');
sessionStore = new connect.middleware.session.MemoryStore();



class Config
  constructor: () ->
    @base_dir =  __dirname;
    @host = {
      ip: null
      is_sock: true
      port: "/tmp/clive.sock" #process.env.PORT or 3000
    }
    @database = {
      ip: "127.0.0.1"
      name: "nodes2"
    }
    @apps = [
      "illisian"
    ]
    @sessions = {
      cookie: cookieParser
      store: sessionStore
    }
      
    @modules = ["compiler", "security", "fields", "socket"]

    @express = {
      enable: ["trust-proxy"]
      use: [
        express.favicon()
        express.logger("dev")
        #express.methodOverride()
        cookieParser
        express.session({ store: sessionStore })
        #express.errorHandler() if "development" is @app.get("env")
      ]
        
    }
    @security = {}
    @security.google = {
      callbackURL: "http://"
      clientID: ""
      clientSecret: ""
      scope: ['https://www.googleapis.com/auth/userinfo.profile', 'https://www.googleapis.com/auth/userinfo.email']
    }
    @security.github = {
      callbackURL: ""
      clientID: ""
      clientSecret: ""
    }
    @security.facebook = {
      callbackURL: "http://"
      clientID: ""
      clientSecret: ""
    }


module.exports = Config